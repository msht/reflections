Q. What happens when you initialize a repository?
 Why do you need to do it?
Ans: Git creates a repository with zero commits.
I need to do it if I want to keep commits at same
time for multiple files.
Q. How is the staging area different from
 the working directory and the repository? 
What value do you think it offers?
Ans: The staging area is one step ahead of the
working directory but one step behind the repository.
It offers us the choice of which files we want to 
commit together.
Q. How can you use the staging area to make sure you
 have one commit per logical change?
Ans: Only stage the files that had one logical change
before making a commit.
Q. What are some situations when branches would be helpful 
in keeping your history organized? How would branches help?
Ans: When I'm working on an experimental feature that I am
not sure if I'll add to the main app later on or not. 
Or if I'm working on a version that shouldn't affect the main app
like a version of different language.
Q. How do the diagrams help you visualize the branch structure?
Ans: They help me understand it very well.
Q. What is the result of merging two branches together?
 Why do we represent it in the diagram the way we do?
 Ans: It's useful.
 Q. What are the pros and cons of Gitâ€™s automatic merging
  vs. always doing merges manually?
  Ans: Automatic merging requires less work it's great. 
  Manual merging is useful for sorting out conflicts.
  


